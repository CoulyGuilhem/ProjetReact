{"ast":null,"code":"var _jsxFileName = \"/Users/coulyg/Desktop/ProjetReact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderRows(coordonne) {\n    const rows = [];\n\n    for (let i = 0; i < 10; i++) {\n      rows.push(this.renderSquare(i + coordonne * 10));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const table = [];\n\n    for (let i = 0; i < 10; i++) {\n      table.push(this.renderRows(i));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(100)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const data = [];\n\n    for (let i = 0; i < squares.length; i++) {\n      data[i] = Math.random() * (2 - 1) + 1;\n    }\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = i;\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/coulyg/Desktop/ProjetReact/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Square","props","onClick","value","Board","Component","renderSquare","i","squares","renderRows","coordonne","rows","push","render","table","Game","constructor","state","history","Array","stepNumber","xIsNext","handleClick","slice","current","length","data","Math","random","calculateWinner","setState","concat","jumpTo","step","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    renderRows(coordonne){\n        const rows = [];\n        for (let i = 0; i < 10; i++){\n            rows.push(this.renderSquare(i+coordonne*10))\n        }\n        return (\n            <div className=\"board-row\">\n                {rows}\n            </div>\n        )\n    }\n\n    render() {\n        const table = [];\n        for (let i = 0; i < 10; i++){\n            table.push(this.renderRows(i))\n        }\n        return (\n            <div>\n                {table}\n\n            </div>\n        );\n    }\n}\n\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(100)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        const data = []\n\n        for (let i = 0;i <squares.length;i++){\n            data[i] = Math.random() * (2 - 1) + 1;\n        }\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = i\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        \n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}